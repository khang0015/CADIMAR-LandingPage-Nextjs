FROM node:18-alpine AS base

# Install dependencies
FROM base AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app
COPY package.json package-lock.json* ./
RUN npm install --only=production

# Build backend
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Install tsx globally for TypeScript execution
RUN npm install -g tsx

# Production runtime
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV PORT=5000

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 backend

# Copy dependencies and source
COPY --from=deps /app/node_modules ./node_modules
COPY --from=builder /app/backend ./backend
COPY --from=builder /app/package.json ./package.json

# Copy uploads folder with existing images
COPY --from=builder /app/backend/uploads ./backend/uploads

# Install tsx in production
RUN npm install -g tsx

# Ensure uploads directory has correct permissions
RUN chown -R backend:nodejs backend/uploads

USER backend

EXPOSE 5000

CMD ["tsx", "backend/server.ts"]
