version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: cadimar-mysql
    environment:
      MYSQL_ROOT_PASSWORD: 12345
      MYSQL_DATABASE: cadimar_db
      MYSQL_USER: cadimar_user
      MYSQL_PASSWORD: cadimar_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Main Application
  cadimar-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cadimar-app
    ports:
      - "3000:3000"
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=12345
      - DB_NAME=cadimar_db
      - BACKEND_PORT=3001
      - FRONTEND_URL=http://localhost:3000
      - BACKEND_URL=http://localhost:3001
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - uploads_data:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/test"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Optional: Add nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: cadimar-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - cadimar-app
    restart: unless-stopped
    profiles:
      - production

volumes:
  mysql_data:
    driver: local
  uploads_data:
    driver: local
